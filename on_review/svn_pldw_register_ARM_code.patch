Index: VEX/priv/guest_arm_toIR.c
===================================================================
--- VEX/priv/guest_arm_toIR.c	(revision 2728)
+++ VEX/priv/guest_arm_toIR.c	(working copy)
@@ -13140,16 +14099,17 @@
    vassert(BITS4(1,1,1,1) == INSN_COND);
 
    /* ------------------------ pld ------------------------ */
 
-   if (BITS8(0,1,1,1, 0, 1,0,1) == (INSN(27,20) & BITS8(1,1,1,1,0,1,1,1))
+   if (BITS8(0,1,1,1,0,0,0,1) == (INSN(27,20) & BITS8(1,1,1,1,0,0,1,1))
        && BITS4(1,1,1,1) == INSN(15,12)
        && 0 == INSN(4,4)) {
       UInt rN   = INSN(19,16);
@@ -13157,7 +14117,8 @@
       UInt imm5 = INSN(11,7);
       UInt sh2  = INSN(6,5);
       UInt bU   = INSN(23,23);
-      if (rM != 15) {
+      UInt bR   = INSN(22,22);
+      if (rM != 15 && (rN != 15 || bR)) {
          IRExpr* eaE = mk_EA_reg_plusminus_shifted_reg(rN, bU, rM,
                                                        sh2, imm5, dis_buf);
          IRTemp eaT = newTemp(Ity_I32);
@@ -13166,7 +14127,7 @@
             by iropt a little later on. */
          vassert(eaE);
          assign(eaT, eaE);
-         DIP("pld %s\n", dis_buf);
+         DIP("pld%c %s\n", bR ? ' ' : 'w', dis_buf);
          return True;
       }
       /* fall through */
